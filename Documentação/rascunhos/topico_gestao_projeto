3 GESTÃO DO PROJETO
        
Esta seção detalha as principais estratégias empregadas no desenvolvimento da aplicação web de gestão para a pousada Chalés Água de Coco. Dessa forma, nela são apresentadas as metodologias, ferramentas e práticas que foram adotadas para o planejamento, execução e monitoramento do projeto, com o objetivo de garantir uma entrega organizada, eficiente e alinhada aos objetivos estabelecidos pelas partes interessadas.


3.1 Organização da Equipe


        Na gestão desse projeto, a organização da equipe representou um marco fundamental e teve como foco dividir as funções e atividades necessárias para o desenvolvimento da aplicação web de gestão da pousada. 


3.1.1 Funções e Responsabilidades


        A designação das funções e responsabilidades foi realizada de maneira estratégica e levou em consideração as competências técnicas e experiências prévias de cada membro da equipe, visando a entrega do produto final dentro do prazo estipulado.         A função de cada membro e suas respectivas responsabilidades estão detalhadas no quadro "": Função e Responsabilidades da Equipe do Projeto.        


                Quadro “” - I.        


Integrante
	Função
	Responsabilidades
	Anna Julia
	Analista de Cronograma / PMO (Project Management Officer) 
	Criar e atuar na manutenção e monitoramento do cronograma do projeto, além de oferecer suporte nas práticas de gestão 
	Guilherme Akio
	Engenheiro de Dados / Administrador de Banco de Dados (DBA) 
	Implementar, administrar  e otimizar o banco de dados da aplicação, garantindo a integridade, segurança e performance dos dados
	Guilherme Bittencourt
	Documentador Técnico / Engenheiro de Software
	Criar e manter a documentação técnica, garantido a clareza e acessibilidade das informações do projeto. Além de definir e organizar a estrutura da aplicação.
	Kelly Radchelle
	Gerente de Projeto 
	Coordenar a equipe e gerenciar as atividades  do projeto, a fim de facilitar as tomadas de decisões e  assegurar a comunicação entre as partes interessadas do projeto 
	Rafael Teixeira
	Desenvolvedor Frontend e UI/UX Designer 
	Criar e implementar a interface da aplicação, garantindo uma boa  experiência de usuário (UX)  e design de interface (UI), além de desenvolver a lógica de apresentação.
	Ricardo Carriel
	Desenvolvedor Backend e Administrador de Servidores 
	Desenvolver a lógica de negócio da aplicação, configurar e administrar o servidor de aplicação  além de garantir a integração da aplicação
	                        
3.2 Metodologias de gestão e desenvolvimento


Para assegurar que o produto final seja entregue em pleno alinhamento com as expectativas da cliente, a equipe envolvida no projeto optou pela adoção da metodologia ágil Scrum como ferramenta de gestão e desenvolvimento do projeto. Essa decisão fundamentou-se na familiaridade da equipe com a estrutura, na capacidade do Scrum de otimizar a organização, divisão e planejamento de atividades do projeto, e em sua relevância como framework de gerenciamento– dado seu uso extensivo no contexto de desenvolvimento de softwares complexos.
Segundo Schwaber e Sutherland (2013), o Scrum é um framework estruturado desenvolvido na década de 1990. Ele foi criado com o intuito de auxiliar equipes na criação e gerenciamento de produtos complexos. Para isso o Scrum tem como pilares fundamentais a transparência, a inspeção e a adaptação. A transparência garante que todos os aspectos significativos do processo estejam visíveis e claros para as partes interessadas a todo momento. A inspeção envolve o acompanhamento regular dos artefatos e progresso, a fim da detecção precoce de problemas. Por fim, a adaptação refere-se à capacidade de fazer ajustes no processo  em resposta aos problemas anteriormente detectados na inspeção, com o objetivo de otimizar os resultados.
Sabendo que para operacionalizar esses pilares e assegurar um ciclo de desenvolvimento iterativo e incremental, a metodologia Scrum sugere a definição de papeis específicos dentro do time, estabelece a realização de uma sequência de eventos formais e o uso de artefatos específicos, os integrantes da equipe desenvolveram as tarefas e eventos sugeridos pelo Scrum para a gestão e desenvolvimento do projeto.


3.2.2 Time Scrum


        Como estabelecido no Guia do Scrum (SCHWABER; SUTHERLAND, 2013), os membros da equipe do projeto assumem papeis específicos que compõem um time Scrum: Dono do Produto (Product Owner), Scrum Master e Time de Desenvolvimento. 
* O Dono do Produto (Product Owner) é o representante das partes interessadas (Stakeholders) e tem como responsabilidade principal gerenciar o backlog do Produto, a fim de maximizar o valor do produto e otimizar o trabalho do Time de Desenvolvimento. 
* O Scrum Master é o responsável por promover e facilitar a aplicação da teoria e das práticas do framework, atuando como um líder-servidor ao auxiliar a equipe na retirada de impedimentos que venham afetar seu progresso . 
* O Time de Desenvolvimento é responsável por entregar um incremento (versão potencialmente usável do produto) ao final de cada sprint, atuando de maneira auto-organizada e multifuncional . 
Ciente disso, realizou-se a distribuição dos papeis de um time scrum entre os integrantes da equipe e registrou-se no quadro “”.
                Quadro “” - Time Scrum.




        Integrante
	Função
	Product Owner
	Scrum Master
	Time de Desenvolvimento
	Anna Julia
	

	X
	

	Guilherme Akio
	

	

	X
	Guilherme Bittencourt
	

	

	X
	Kelly Radchelle
	X
	

	

	Rafael Teixeira
	

	

	X
	Ricardo Carriel
	

	

	X
	

        
Artefatos


        No scrum,  os artefatos são elementos fundamentais que ajudam a equipe a consolidar a transparência no processo de desenvolvimento. Cientes das suas importâncias, o time scrum realizou o planejamento inicial dos artefatos: Product Backlog e Sprints Backlog. 


Product Backlog


No Guia do Scrum (SCHWABER; SUTHERLAND, 2013), o Product Backlog é definido como uma lista ordenada de todos os itens de trabalho, sendo elas as funcionalidades, os requisitos e os aprimoramentos necessários para a produção do produto,  e que oferecem o máximo valor e utilidade para o cliente. Diante disso, foi elaborado pelo product owner do projeto o backlog de produto inicial da aplicação web de gestão da pousada Chalés Água de Coco (Quadro “”) com base nas histórias de usuário levantadas pela equipe, visto que, elas expressam as necessidades e expectativas sob a perspectiva da usuária e principal stakeholder.




Legenda - Product Backlog
Essencial- Item indispensável para o funcionamento básico do sistema para a entrega do MVP.
Importante- Item agrega valor ao produto final, mas não afeta a entrega do MVP.
Desejável- Item pode ser implementado posteriormente.




Código
	Item
	Categoria
	Prioridade
	1
	Definir e configurar ambiente de desenvolvimento
	Requisito Técnico
	ALTA
	2
	Definir ambiente de hospedagem/publicação
	Requisito Técnico
	ALTA
	3
	Organizar repositório e fluxo Git
	Requisito Técnico
	ALTA
	4
	Levantar requisitos funcionais e não funcionais
	Modelagem de dados
	ALTA
	5
	Mapear casos de uso
	Modelagem de dados
	ALTA
	6
	Documentar o levantamento e registrar os requisitos
	Documentação
	ALTA
	7
	Criar Modelo Entidade-Relacionamento (MER)
	Modelagem de dados
	ALTA
	8
	Criar Diagrama de Entidade-Relacionamento (DER)
	Modelagem de dados
	ALTA
	9
	Criar Diagrama de Componentes
	Arquitetura
	ALTA
	10
	Criar Diagrama de Implantação
	Arquitetura
	ALTA
	11
	Documentar os diagramas produzidos
	Documentação
	ALTA
	12
	Configurar ambiente do servidor
	Requisito Técnico
	ALTA
	13
	Configurar banco de dados PostgreSQL
	Requisito Técnico
	ALTA
	14
	Implementar login e logout de usuários
	Autenticação e Segurança
	ALTA
	15
	Criar funcionalidade de cadastro de quartos
	Gestão de Quartos
	ALTA
	16
	Criar funcionalidade de exclusão de cadastro de quartos
	Gestão de Quartos
	MÉDIA
	17
	Criar funcionalidade de listagem de quartos
	Gestão de Quartos
	MÉDIA
	18
	Criar funcionalidade de edição do cadastro de quartos
	Gestão de Quartos
	MÉDIA
	19
	Criar interfaces para gestão de quartos
	Gestão de Quartos
	MÉDIA
	20
	Implementar funcionalidade de alteração manual do status (disponível, indisponível, em manutenção) do quarto
	Gestão de Quartos
	MÉDIA
	21
	Criar funcionalidade de cadastro de hóspedes
	Gestão de Hóspedes
	ALTA
	22
	Criar funcionalidade de exclusão do cadastro de hóspedes
	Gestão de Hóspedes
	MÉDIA
	23
	Criar funcionalidade de edição do cadastro de hóspedes
	Gestão de Hóspedes
	MÉDIA
	24
	Criar interfaces para gestão de hóspedes
	Gestão de Hóspedes
	MÉDIA
	25
	Criar funcionalidade de cadastro de reservas
	Gestão de Reservas
	ALTA
	26
	Criar funcionalidade de exclusão do cadastro de reservas
	Gestão de Reservas
	ALTA
	27
	Criar funcionalidade de edição do cadastro de reservas
	Gestão de Reservas
	ALTA
	28
	Criar interfaces para gestão de Reservas
	Gestão de Reservas
	ALTA
	29
	Criar funcionalidade para visualização do histórico de reservas por hóspede
	Gestão de Reservas
	MÉDIA
	30
	Criar lógica de validação de disponibilidade de quartos para reservas
	Gestão de Reservas
	ALTA
	31
	Implementar atualização automática do status do quarto para “ocupado” após o check-in
	Check-in e Check-out
	ALTA
	32
	Criar funcionalidade de atualização do check-out
	Check-in e Check-out
	ALTA
	33
	Integrar ambientes, back-end e front-end
	Requisito técnico
	ALTA
	34
	Documentar a configuração e o código desenvolvido 
	Documentação
	ALTA
	35
	Criar funcionalidade de cadastro de receitas
	Gestão Financeira
	BAIXA 
	36
	Criar funcionalidade para registrar comprovação de pagamento de reservas 
	Gestão Financeira/Gestão de Reservas.
	BAIXA 
	37
	Criar funcionalidade de exclusão do cadastro de receitas
	Gestão Financeira
	BAIXA 
	38
	Criar funcionalidade de edição do cadastro de receitas
	Gestão Financeira
	BAIXA 
	39
	Criar interface para gestão de receitas
	Gestão Financeira
	BAIXA 
	40
	Criar funcionalidade de cadastro de despesas
	Gestão Financeira
	BAIXA 
	41
	Criar funcionalidade de exclusão do cadastro de despesas
	Gestão Financeira
	BAIXA 
	42
	Criar funcionalidade de edição do cadastro de despesas
	Gestão Financeira
	BAIXA 
	43
	Aprimorar cadastro de despesas para incluir tipo (fixo/variável)
	Gestão Financeira
	BAIXA 
	44
	Criar interface para gestão de despesas
	Gestão Financeira
	BAIXA 
	45
	Criar funcionalidade para criar relatórios de quartos
	Gestão Financeira
	BAIXA 
	46
	Criar funcionalidade para criar relatórios de hóspedes
	Gestão Financeira
	BAIXA 
	47
	Criar funcionalidade para criar relatórios de reservas
	Gestão Financeira
	BAIXA 
	48
	Criar balanço financeiro simples (receitas, despesas, saldo) por período
	Gestão Financeira
	BAIXA 
	49
	Criar funcionalidade de filtragem de receita/despesa (data, categoria).
	Gestão Financeira
	BAIXA 
	50
	implementar envio de notificação (e-mail/SMS) para hóspede após confirmação da reserva
	Notificações
	BAIXA 
	51
	Implementar criptografia 
	Autenticação e Segurança
	BAIXA 
	52
	Definir escopo dos testes
	Testes
	MÉDIA
	53
	Identificar cenários de teste
	Testes
	MÉDIA
	54
	Elaborar casos de teste
	Testes
	MÉDIA
	55
	Definir as ferramentas de teste
	Testes
	MÉDIA
	56
	Estabelecer ambiente de teste
	Testes
	MÉDIA
	57
	Definir critérios de aceitação
	Testes
	MÉDIA
	58
	Preparar dados de teste
	Testes
	MÉDIA
	59
	Executar testes gerais
	Testes
	MÉDIA
	60
	Executar testes SSL
	Testes
	MÉDIA
	61
	Analisar e otimizar headers de segurança
	Autenticação e Segurança
	MÉDIA
	

62
	Realizar ajustes de segurança
	Autenticação e Segurança
	MÉDIA
	63
	Documentar resultados dos testes
	Testes
	MÉDIA
	64
	Documentar componentes e estilos
	Documentação
	ALTA
	65
	Documentar o plano e a execução de testes
	Documentação
	MÉDIA
	66
	Registrar escolhas e mudanças de rumo
	Documentação
	ALTA
	67
	Documentar problemas ocorridos e lições aprendidas
	Documentação
	ALTA
	68
	Elaborar o plano de implantação
	Implantação
	MÉDIA
	69
	Realizar implantação do sistema
	Implantação
	MÉDIA
	70
	Revisão final da documentação técnica
	Documentação
	ALTA
	71
	Treinamento da proprietária da pousada para uso da aplicação
	Implantação
	MÉDIA
	

Sprint Backlog


        O Sprint Backlog é um plano produzido pelo time de desenvolvimento, formado por um conjunto de itens selecionados da Product Backlog, que possui um período de tempo determinado para ser realizado, chamado de Sprint. Esse artefato auxilia na transparência das atividades do projeto, já que deixa visível e acessível as atividades que devem ser feitas na Sprint para os membros da equipe, deixando todos cientes do que está sendo desenvolvido. Por isso, o time implementou o quadro “” que registra todas as Sprint Backlog planejadas para o decorrer do projeto.
 Para isso,  dada a flexibilidade oferecida por essa metodologia, dividiu-se as sprints do projeto em períodos de quinze dias (duas semanas), período dentro do estipulado pelo Guia do Scrum (SCHWABER;SUTHERLAND, 2020). A escolha desse período de duração para as Sprints levou em consideração que a equipe trabalharia a maior parte do projeto remotamente e o tempo diário individual de trabalho disponível por membro, o que exigia tempos de desenvolvimento das tarefas mais longos. E as atividades adicionadas foram baseadas nos itens da Product Backlog, entrega do MVP do projeto e as demais tarefas essenciais para o desenvolvimento do produto, como realização de testes e elaboração da documentação técnica.




Sprint
	Período
	Objetivo
	Atividades
	



1
	08/04/2025 a 22/04/2025
	

Realizar o planejamento do projeto e estabelecer suporte técnico
	* Definir e configurar ambiente de desenvolvimento
* Definir ambiente de hospedagem/publicação
* Organizar repositório e fluxo Git
	





2
	22/04/2025 a 06/05/2025 
	

Iniciar a fase de modelagem e documentação dos requisitos
	* Levantar requisitos funcionais e não funcionais
* Mapear casos de uso
* Documentar o levantamento e registrar os requisitos
	







3
	

06/05/2025 a 20/05/2025 
	

Finalizar a modelagem de dados e definir a arquitetura do sistema
	* Criar do Diagrama de Componentes
* Criar do Diagrama de Implantação
* Criar do modelo relacional (MER)
* Criar do Diagrama de Entidade e Relacionamento (DER)
* Documentar os diagramas produzidos
	















4
	



20/05/2025 a 03/06/2025
	

Configurar o ambiente do servidor, banco de dados e iniciar o desenvolvimento das funcionalidades para o MVP.
	

* Configurar ambiente do servidor
* Configurar banco de dados PostgreSQL
* Implementar login e logout de usuários
* Criar funcionalidade de cadastro de quartos
* Criar funcionalidade de exclusão de cadastro de quartos
* Criar funcionalidade de listagem de quartos
	







5
	



03/06/2025 a 17/06/2025
	



Desenvolver as funcionalidades de edição de quartos, interfaces e a gestão básica de hóspedes.
	* Criar funcionalidade de edição do cadastro de quartos
* Criar interfaces para gestão de quartos
* Implementar funcionalidade de alteração manual do status (disponível, indisponível, em manutenção) do quarto
* Criar funcionalidade de cadastro de hóspedes
* Criar funcionalidade de exclusão do cadastro de hóspedes
* Criar funcionalidade de edição do cadastro de hóspedes
* Criar interfaces para gestão de hóspedes
* Consolidar a documentação técnica do MVP


	





















6
	









17/06/2025 a 24/06/2025
	











Concluir as funcionalidades principais de reservas, check-in/check-out e integração para a entrega do MVP.
	* Criar funcionalidade de cadastro de reservas
* Criar funcionalidade de exclusão do cadastro de reservas
* Criar funcionalidade de edição do cadastro de reservas
* Criar interfaces para gestão de Reservas
* Criar lógica de validação de disponibilidade de quartos para reservas
* Implementar atualização automática do status do quarto para “ocupado” após o check-in
* Criar funcionalidade de atualização do check-out
* Integrar ambientes, back-end e front-end
* Documentar a configuração e o código desenvolvido (Focado no MVP)
	







7
	



12/08/2025 a 26/08/2025
	



Começar o desenvolvimento das funcionalidades de gestão financeira


	* Criar funcionalidade de cadastro de receitas
* Criar funcionalidade de exclusão do cadastro de receitas
* Criar funcionalidade de edição do cadastro de receitas
* Criar interface para gestão de receitas
* Criar funcionalidade de cadastro de despesas
* Criar funcionalidade de exclusão do cadastro de despesas
	









8
	



26/08/2025 a 10/09/2025
	

Finalizar o CRUD de despesas e adicionar funcionalidades importantes para a gestão financeira


	* Criar funcionalidade de edição do cadastro de despesas
* Criar interface para gestão de despesas
* Aprimorar cadastro de despesas para incluir tipo (fixo/variável)
* Criar funcionalidade para registrar comprovação de pagamento de reservas
* período
* Criar funcionalidade de filtragem de receita/despesa (data, categoria).
* Implementar criptografia 
* Documentar a configuração e o código desenvolvido (Integrar ao do MVP)
	





9
	



10/09/2025 a 25/09/2025
	

Implementar as funcionalidades associadas aos relatórios financeiros e a funcionalidade de filtragem
	* Criar funcionalidade para criar relatórios de quartos
* Criar funcionalidade para criar relatórios de hóspedes
* Criar funcionalidade para criar relatórios de reservas
* Criar balanço financeiro simples (receitas, despesas, saldo) por período
* Criar funcionalidade de filtragem de receita/despesa (data, categoria)
	



10
	

25/09/2025 a 10/10/2025
	

Implementar a criptografia e preparar o ambiente para os testes de segurança.
	

* Implementar criptografia
* Definir escopo dos testes
* Identificar cenários de teste
* Elaborar casos de teste
* Definir as ferramentas de teste
* Estabelecer ambiente de teste
* Definir critérios de aceitação
* Preparar dados de testes
	





11
	

11/10/2025 a 25/10/2025
	

Executar testes gerais e de segurança, e documentar os resultados.
	* Executar testes gerais
* Documentar resultados dos testes
* Executar testes SSL
* Analisar e otimizar Headers de segurança
* Realizar ajustes de segurança
	





12
	

26/10/2025 a 09/11/2025
	



Finalizar a documentação do projeto e planejar a implantação
	* Documentar componentes e estilos
* Documentar o plano e a execução de testes
* Registrar escolhas e mudanças de rumo
* Documentar problemas ocorridos e lições aprendidas
* Elaborar o plano de implantação
	





13
	

10/11/2025 a 24/11/2025
	

Realizar a implantação do sistema e o treinamento da proprietária
	* Realizar a implantação da aplicação
* Revisão final da documentação técnica
* Treinamento da proprietária da pousada para uso da aplicação
* Entrega do produto final 
	





https://scrumguides.org/docs/scrumguide/v1/Scrum-Guide-Portuguese-BR.pdf
https://scrumguides.org/scrum-guide.html#sprint-review














Gestão de Riscos

        Diante da flexibilidade e do incentivo à melhoria contínua proporcionados pela metodologia Scrum, escolhida para a elaboração da aplicação web de gestão da Pousada Chalés Água de Coco, a equipe considerou útil implementar ferramentas de apoio à gestão de riscos, com o objetivo de fortalecer as práticas de inspeção e adaptação realizadas nas sprints.
 De acordo com Sommerville (2011, p.416), o gerenciamento de riscos é um processo iterativo fundamental para prever os riscos associados ao desenvolvimento do projeto, porque ele incentiva a compreensão dos riscos com o objetivo de que estes sejam previstos, detectados e tratados, de forma que eles não afetem a entrega do produto final
No contexto do desenvolvimento de software, riscos podem ser definidos como elementos ou eventos de origem multifatorial que, caso ocorram, impactam negativamente  o cronograma, os custos, a qualidade ou o escopo do projeto.
 Nesse sentido, a gestão de riscos foi uma atividade de suma importância para o desenvolvimento do sistema web, pois forneceram mecanismos que auxiliaram a equipe a identificar precocemente possíveis problemas, compreendê-los e tratá-los de maneira eficaz durante todo o desenvolvimento. 
Ciente disso, desenvolveu-se um processo de identificação dos riscos iniciais do projeto e, a partir disso, foram elaboradas estratégias de mitigação para cada um deles. Com o objetivo de garantir o cumprimento dos prazos e evitar o retrabalho por parte da equipe.


Identificação dos Riscos do Projeto


        O primeiro passo para o desenvolvimento de ações a serem tomadas para a gestão de riscos foi a identificação dos dos principais riscos do projeto de desenvolvimento do sistema web de gestão da Pousada Chalés Água de Coco. Os riscos foram levantados a partir do conhecimento das principais características inerentes ao desenvolvimento de uma aplicação, do time scrum e do negócio.


Código
	Risco
	Afeta
	Descrição
	R01
	Requisitos mal definidos ou incompletos
	

Projeto 
	Os requisitos levantados são inconsistentes, exigindo retrabalho e falhas na produção
	R02
	Atraso no cronograma
	

Projeto
	Comunicação deficiente ou dificuldades nas entregas geraram atrasos no cronograma
	R03
	Perda de dados ou inconsistência
	Projeto e Produto
	Houve falhas na modelagem ou na lógica do negócio que resultaram em falhas de produção
	R04
	Tamanho do Projeto Subestimado
	Projeto e Produto
	A equipe não conseguiu dimensionar o trabalho exigido pelo projeto o que exige um retrabalho de planejamento das tarefas
	R05
	Prazo de Desenvolvimento Subestimado
	

Projeto
	A equipe encontrou obstáculos maiores que o previsto durante o desenvolvimento do projeto que exigem maior tempo para o desenvolvimento
	R06
	Integrantes chaves estão doentes em momentos críticos do projeto
	

Projeto
	A ausência de um integrante importante para a realização de uma tarefa exige que os outros integrantes tenham que assumir sem dominação do assunto 
	R07
	Vazamento de dados de hóspedes
	Negócio
	O sistema  armazenará dados pessoais e sensíveis e não possui uma estrutura de segurança fortificada
	R08
	Custos do projeto subestimados
	Projeto e Produto
	Houveram custos adicionais não previstos no planejamento
	R09
	Risco de integração de módulos (Django)
	Projeto e Produto
	A equipe enfrenta dificuldades em integrar as entidades do sistema decorrente de um mau planejamento de comunicação entre elas, segundo a arquitetura Django (MVT).
	R10
	Problemas de segurança no ambiente de produção
	Produto
	A implantação do sistema expõe falhas de segurança não identificados durante o desenvolvimento
	


Análise e Planejamento dos Riscos


        Reconhecidos os riscos associados ao projeto, analisou-se e definiu-se a probabilidade de impacto e de ocorrência, além das estratégias de prevenção e contingência para cada um. Essas informações estão registradas no quadro “”.






Risco
	Impacto
	Probabilidade de Ocorrência
	Estratégias de Prevenção
	Estratégias de Contingência
	R01
	Alto
	Alta
	Fazer revisões e validações periódicas dos requisitos, conforme o andamento do projeto
	Interromper as atividades de desenvolvimento e fazer revisão dos requisitos com o time de desenvolvimento e o product owner
	R02
	Médio
	Alta
	Monitorar o andamento das tarefas do projeto e solucionar problemas que possam vir a impactar o andamento do cronograma
	Reavaliar o backlog das sprints restantes e reorganizar as tarefas, priorizando a execução daquelas que são essenciais para a entrega final
	R03
	Alto
	Alta
	Revisar e validar os elementos da modelagem de dados antes de iniciar o desenvolvimento; Definir lógicas de salvamento e atualização de dado


	Revisar os documentos da modelagem de dados;  identificar e corrigir as falhas na lógica do negócio 
	R04
	Alto
	Baixa
	Definir claramente as funcionalidades do sistema, evitando a adição de requisitos que ampliem o sistema para além do planejado
	Priorizar a entrega das funcionalidades definidas nos requisitos iniciais do projeto
	R05
	Médio
	Alta
	Definir junto a com o time de desenvolvimento o número de sprints viáveis para o desenvolvimento; Monitorar as atividades e obstáculos nas sprints de desenvolvimento para prever possíveis atrasos no cronograma
	Reorganizar tarefas das sprints de desenvolvimento, priorizando a realização de tarefas associadas as funcionalidades essenciais do sistema
	R06
	Médio
	Baixa
	Distribuir as tarefas do projeto de forma estratégica  para que em nenhum momento o projeto fique dependente demais de um integrante, além de desenvolver uma documentação robusta para que outro integrante consiga dar continuidade a tarefa
	Remanejar as tarefas entre os integrantes disponíveis
	R07
	Crítico
	Baixa
	Estabelecer medidas de segurança e criptografia no banco de dados do projeto
	Desconectar o sistema; identificar a origem do vazamento; realizar medidas de propostas pela LGPD; aplicar e documentar as correções de segurança
	R08
	Médio
	Média
	Desenvolver um bom levantamento de custos antes de iniciar o projeto.
	Revisar funcionalidades e priorizar as funcionalidades que caibam no orçamento disponível
	R09
	Alto
	Média
	Realizar validações dos diagramas e o MER do sistema antes de iniciar e durante a fase de desenvolvimento do sistema
	Revisar os diagramas e o MER; Identificar falhas de integração entre os módulos; Corrigir as falhas
	R10
	Alto
	Média
	Definir um plano de testes que abranja os diferentes aspectos e funcionalidades do sistema
	Desconectar o sistema; identificar a origem do problema de segurança; corrigir e documentar o erro
	



        
Monitoramento dos Riscos


        Compreendido quais os riscos do projeto do sistema web e definidas as estratégias de prevenção e resposta a cada um, foi definido um conjunto de elementos para auxiliarem no monitoramento contínuo dos riscos. Esse conjunto está registrado no quadro “”, no qual estão os indicadores de risco, os mecanismos que devem ser utilizados na identificação de alterações, sendo que  esses elementos devem ser monitorados a cada sprint realizada, durante as sprints reviews.




Risco
	Indicadores
	Métricas
	R01
	* Time scrum frequentemente tem dúvidas sobre o que deve ser feito.
* Solicitações frequentes de adição de novas funcionalidades
	* Número de dúvidas abertas durante as reuniões de desenvolvimento.
	R02
	* Constante adiamento de entregas.
* Tempo de desenvolvimento de tarefas maior do que o previsto
	* Porcentagem de tarefas entregues por sprint.
	R03
	* Carência de backups 
* Carência de testes de restauração
	* Frequência (tempo médio) de realização de backups.
* Frequência (tempo médio) de falhas registradas nos testes de banco de dados.
	R04
	* Desenvolvimento das funcionalidades está mais complexo que o esperado
* Aumento de tarefas não previstas nas sprints backlogs.
	* Número de novas tarefas adicionadas nas sprints backlogs. 
	R05
	* Tarefas sendo remanejadas constantemente para futuras sprints
	* Número de remanejamento de tarefas por sprint.
	R06
	* Carência de comunicação entre os membros do time
* Carência de documentação e code review para facilitar substituições em tarefas
	* Número da concentração de tarefas por integrante.
	R07
	* Dados sensíveis armazenados sem criptografia
* Carência de testes de segurança
* Códigos com permissões e bibliotecas mal configurados
	* Número do uso de dados sensíveis sem criptografia.
* Número de inconformidades com a LGPD (checklist).
	R08
	* Gastos com ferramentas para funcionalidades não previstas 
	* Número de recursos contratados fora do planejamento inicial.
	R09
	* Módulos desenvolvidos em paralelo sem o uso de práticas de integração contínua.
* Carência de testes de integração.
* Modelos mal padronizados
	* Número de bugs relacionados à comunicação entre módulos.
	R10
	* Carência de mecanismos como HTTPS e headers de segurança
* Dados sensíveis expostos em variáveis de ambiente
	* Número de falhas identificadas durante testes de segurança
	

        Portanto, dado seu caráter fiscalizatório, a aplicação dos mecanismos de  gestão de riscos no desenvolvimento do sistema web da Pousada Chalés Água de Coco assegura a capacidade de inspeção e adaptação contínua do projeto. De forma tal, a contribuir significativamente para a entrega de um produto final seguro e alinhado com os requisitos e regras do negócio. 

